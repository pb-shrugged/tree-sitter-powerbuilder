
name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for this version
          awk '/^## \[?'${{ steps.get_version.outputs.VERSION }}'\]?/{flag=1; next} /^## \[?[0-9]/{flag=0} flag' CHANGELOG.md > release_notes.md
        else
          echo "Release ${{ steps.get_version.outputs.VERSION }}" > release_notes.md
          echo "" >> release_notes.md
          echo "### Changes" >> release_notes.md
          echo "- See commit history for detailed changes" >> release_notes.md
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

  build-and-upload:
    name: Build and Upload Assets
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            asset_name: tree-sitter-powerbuilder-linux-x64
            target: linux-x64
          - os: windows-latest
            asset_name: tree-sitter-powerbuilder-win32-x64
            target: win32-x64
          - os: macos-latest
            asset_name: tree-sitter-powerbuilder-darwin-x64
            target: darwin-x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: 20
        cache: 'npm'

    - name: Install tree-sitter CLI
      run: npm install -g tree-sitter-cli

    - name: Install dependencies
      run: npm ci

    - name: Generate grammar
      run: npm run ts:generate

    - name: Build WASM
      run: tree-sitter build --wasm

    - name: Build prebuilds
      run: npx prebuildify --napi --strip

    - name: Create distribution package
      run: |
        mkdir -p dist
        cp -r src dist/
        cp -r prebuilds dist/ 2>/dev/null || echo "No prebuilds directory"
        cp grammar.js dist/
        cp tree-sitter.json dist/
        cp package.json dist/
        cp *.wasm dist/ 2>/dev/null || echo "No WASM files"
        tar -czf ${{ matrix.asset_name }}.tar.gz -C dist .

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./${{ matrix.asset_name }}.tar.gz
        asset_name: ${{ matrix.asset_name }}.tar.gz
        asset_content_type: application/gzip

  upload-wasm:
    name: Upload WASM Asset
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: 20
        cache: 'npm'

    - name: Install tree-sitter CLI
      run: npm install -g tree-sitter-cli

    - name: Install dependencies
      run: npm ci

    - name: Generate grammar
      run: npm run ts:generate

    - name: Build WASM
      run: tree-sitter build --wasm

    - name: Upload WASM Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./tree-sitter-powerbuilder.wasm
        asset_name: tree-sitter-powerbuilder.wasm
        asset_content_type: application/wasm
