
name: Update Version

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
        - prerelease
      prerelease_id:
        description: 'Prerelease identifier (alpha, beta, rc)'
        required: false
        type: string
        default: 'alpha'

jobs:
  update-version:
    name: Update Version
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: 20
        cache: 'npm'

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Install dependencies
      run: npm ci

    - name: Update version
      id: version
      run: |
        if [ "${{ github.event.inputs.version_type }}" = "prerelease" ]; then
          NEW_VERSION=$(npm version prerelease --preid=${{ github.event.inputs.prerelease_id }} --no-git-tag-version)
        else
          NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
        fi
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "New version: $NEW_VERSION"

    - name: Update tree-sitter.json version
      run: |
        VERSION=${{ steps.version.outputs.new_version }}
        VERSION=${VERSION#v}  # Remove 'v' prefix
        
        # Update version in tree-sitter.json
        jq --arg version "$VERSION" '.metadata.version = $version' tree-sitter.json > tree-sitter.json.tmp
        mv tree-sitter.json.tmp tree-sitter.json

    - name: Commit version changes
      run: |
        git add package.json tree-sitter.json
        git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }}"
        git push

    - name: Create and push tag
      run: |
        git tag ${{ steps.version.outputs.new_version }}
        git push origin ${{ steps.version.outputs.new_version }}

    - name: Create summary
      run: |
        echo "## Version Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **New Version:** ${{ steps.version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Type:** ${{ github.event.inputs.version_type }}" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.version_type }}" = "prerelease" ]; then
          echo "- **Prerelease ID:** ${{ github.event.inputs.prerelease_id }}" >> $GITHUB_STEP_SUMMARY
        fi
        echo "- **Tag Created:** Yes" >> $GITHUB_STEP_SUMMARY
        echo "- **Next Steps:** The release workflow will automatically trigger" >> $GITHUB_STEP_SUMMARY
